[%! "control-memory.intralisp" %]
[% in-package :control-memory %]
[% load "control-memory-content.lisp" %]
[% load "compiler.lisp" %]
[% defun entity () [@library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity [%~ name %] is [% ports %]
end [%~ name %];

architecture Behavioral of [%~ name %] is
  type rom_t is array (0 to [%~ 1- words %]) of std_logic_vector (50 downto 0);
  signal rom : rom_t := (
    [% dotimes (i words)
    [@"[%=~ "~51,'0b" (+ 66 i) %]"[%~ if (= i (1- words)) "" "," %] -- 66 + [%= i %] = 0x[%=~ "~8,'0x" (+ 66 i) %]
    @]%]);
  signal content : std_logic_vector(50 downto 0);
begin
  content <= rom(to_integer(unsigned(ADDRESS([%~ ceiling (log words 2) %] downto 0))));
[% down 50 control-commands %]
end Behavioral;@]%]
