[%! "flip-flop.intralisp" %]
[% in-package :flip-flop %]
[% defun entity ()
 (common:entity #'name #'ports
  :header [@^
  signal state : std_logic;
           @]
  :body [@^
  process (CLK, RESET)
  begin
    if RESET='1' then
      state <= '0' after 5 ns;
   elsif rising_edge(CLK) and EN='1' then
      state <= D after 5 ns;
    end if;
   end process;
   Q <= state;
   @]) %]
