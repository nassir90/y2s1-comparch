[%! "common.intralisp" %]
[% defpackage :register
(:use :cl)
(:export :size
         :name
         :start-undefined
         :ports
         :entity
         :tb)%]
[% in-package :register %]
[% defvar size 32 %]
[% defvar start-undefined t %]
[% defun name () [@^RF_Register[%=size%]Bit_21364466@] %]
[% defun ports (&optional mode &key en d q)
(let ((common:mode mode))
(common:port-header)
[@
    [% common:port "EN" :map-to (or en "EN") %]
    [% unless (eq mode :signals) (common:port "CLK") %]
    [% common:port "D" :map-to (or d "D") :size size %]
    [% common:port "Q" :map-to (or q "Q") :size size :direction "out" :end ");" %]@])%]