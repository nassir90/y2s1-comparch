[%! "b-logic-ports.intralisp" %]
[%! "mux-ports.intralisp" %]
[% in-package :b-logic %]
[% defun entity ()
(let ((mux:size 1) (mux:select-lines 2) (mux:data-lines 4)) [@library ieee;
use ieee.std_logic_1164.all;
entity [%~ name %] is [% ports %]
end [%~ name %];
architecture Behavioural of [%~ name %] is

   component [%~ mux:name %] is [% mux:ports %]
   end component;
   signal not_A : std_logic;
begin
   not_A <= not A;

   Mux2: [%~ mux:name %] [% mux:ports :uut
                            :subs '(("D0" . "A")
                                    ("D1" . "not_A")
                                    ("D2" . "'0'")
                                    ("D3" . "'1'")
                                    ("sel" . S)) %]
end Behavioural;
@])%]